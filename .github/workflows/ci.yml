name: ci

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read
  packages: write
  security-events: write

jobs:
  build-scan-push:
    runs-on: ubuntu-latest

    env:
      REGISTRY: ghcr.io

    steps:
      - uses: actions/checkout@v4

      # GHCR requires lowercase owner/repo in image paths
      - name: Normalize owner/repo (lowercase)
        id: norm
        run: |
          echo "owner_lc=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
          echo "repo_lc=$(echo '${GITHUB_REPOSITORY#*/}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - uses: docker/setup-buildx-action@v3

      # Prefer a Personal Access Token (classic) with write:packages
      # Create one and add as repo secret GHCR_PAT
      - name: Log in to GHCR (PAT)
        if: ${{ secrets.GHCR_PAT != '' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ steps.norm.outputs.owner_lc }}
          password: ${{ secrets.GHCR_PAT }}

      # Fallback to GITHUB_TOKEN if PAT not provided (requires “Read and write permissions” in repo → Settings → Actions)
      - name: Log in to GHCR (GITHUB_TOKEN fallback)
        if: ${{ secrets.GHCR_PAT == '' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Print bake plan
        run: |
          docker buildx bake \
            --file ./docker-compose.yml \
            --set api.tags=print-only \
            --set monitor.tags=print-only \
            --set notifier.tags=print-only \
            --set status-web.tags=print-only \
            --print

      # First get a clean, successful push (no cache exports to avoid 403 on buildcache HEAD)
      - name: Build & push images
        uses: docker/bake-action@v5
        with:
          push: true
          files: ./docker-compose.yml
          set: |
            api.tags=${{ env.REGISTRY }}/${{ steps.norm.outputs.owner_lc }}/${{ steps.norm.outputs.repo_lc }}-api:sha-${{ github.sha }}
            monitor.tags=${{ env.REGISTRY }}/${{ steps.norm.outputs.owner_lc }}/${{ steps.norm.outputs.repo_lc }}-monitor:sha-${{ github.sha }}
            notifier.tags=${{ env.REGISTRY }}/${{ steps.norm.outputs.owner_lc }}/${{ steps.norm.outputs.repo_lc }}-notifier:sha-${{ github.sha }}
            status-web.tags=${{ env.REGISTRY }}/${{ steps.norm.outputs.owner_lc }}/${{ steps.norm.outputs.repo_lc }}-status-web:sha-${{ github.sha }}

      # ---- DevSecOps (SBOM + Trivy) ----
      - name: Install Syft (SBOM)
        uses: anchore/sbom-action/download-syft@v0.17.5

      - name: Install Trivy
        uses: aquasecurity/trivy-action@0.24.0
        with:
          trivy_version: v0.55.0
        continue-on-error: true

      - name: Scan api
        run: |
          syft ${{ env.REGISTRY }}/${{ steps.norm.outputs.owner_lc }}/${{ steps.norm.outputs.repo_lc }}-api:sha-${GITHUB_SHA} -o spdx-json > sbom-api.json
          trivy image --format sarif --output trivy-api.sarif ${{ env.REGISTRY }}/${{ steps.norm.outputs.owner_lc }}/${{ steps.norm.outputs.repo_lc }}-api:sha-${GITHUB_SHA} || true
      - uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-api.sarif

      - name: Scan monitor
        run: |
          syft ${{ env.REGISTRY }}/${{ steps.norm.outputs.owner_lc }}/${{ steps.norm.outputs.repo_lc }}-monitor:sha-${GITHUB_SHA} -o spdx-json > sbom-monitor.json
          trivy image --format sarif --output trivy-monitor.sarif ${{ env.REGISTRY }}/${{ steps.norm.outputs.owner_lc }}/${{ steps.norm.outputs.repo_lc }}-monitor:sha-${GITHUB_SHA} || true
      - uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-monitor.sarif

      - name: Scan notifier
        run: |
          syft ${{ env.REGISTRY }}/${{ steps.norm.outputs.owner_lc }}/${{ steps.norm.outputs.repo_lc }}-notifier:sha-${GITHUB_SHA} -o spdx-json > sbom-notifier.json
          trivy image --format sarif --output trivy-notifier.sarif ${{ env.REGISTRY }}/${{ steps.norm.outputs.owner_lc }}/${{ steps.norm.outputs.repo_lc }}-notifier:sha-${GITHUB_SHA} || true
      - uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-notifier.sarif

      - name: Scan status-web
        run: |
          syft ${{ env.REGISTRY }}/${{ steps.norm.outputs.owner_lc }}/${{ steps.norm.outputs.repo_lc }}-status-web:sha-${GITHUB_SHA} -o spdx-json > sbom-web.json
          trivy image --format sarif --output trivy-web.sarif ${{ env.REGISTRY }}/${{ steps.norm.outputs.owner_lc }}/${{ steps.norm.outputs.repo_lc }}-status-web:sha-${GITHUB_SHA} || true
      - uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-web.sarif
